---
import '@/styles/globals.css';
import { ClientRouter } from "astro:transitions";
import Navbar from "../components/Navbar.astro";

const { title, metadesc } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <meta name="description" content={metadesc}>
    <link rel="icon" type="image/svg+xml" href="/images/logo.png" />
    <meta name="generator" content={Astro.generator} />
    <link rel="stylesheet" href="/css/main.css" />
    <title>{title} | Lakshyaraj Dash</title>

    <ClientRouter />
  </head>
  <body>
    <Navbar />
    <slot />

	<script>
		const getThemePreference = () => {
			if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
				return localStorage.getItem('theme');
			}
			return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
		};
		const isDark = getThemePreference() === 'dark';
		document.documentElement.classList[isDark ? 'add' : 'remove']('dark');
	 
		if (typeof localStorage !== 'undefined') {
			const observer = new MutationObserver(() => {
				const isDark = document.documentElement.classList.contains('dark');
				localStorage.setItem('theme', isDark ? 'dark' : 'light');
			});
			observer.observe(document.documentElement, { attributes: true, attributeFilter: ['class'] });
		}

		document.addEventListener("astro:after-swap", () => {
			const isDark = getThemePreference() === 'dark';
			document.documentElement.classList[isDark ? 'add' : 'remove']('dark');
		});
	</script>
  </body>
</html>
